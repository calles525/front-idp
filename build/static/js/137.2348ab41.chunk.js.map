{"version":3,"file":"static/js/137.2348ab41.chunk.js","mappings":"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","sources":["components/dashboard/Blog.js","components/dashboard/SalesChart.js","components/dashboard/Feeds.js","views/Starter.js"],"sourcesContent":["import {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Blog = (props) => {\r\n  return (\r\n    <Card>\r\n      <CardImg alt=\"Card image cap\" src={props.image} />\r\n      <CardBody className=\"p-4\">\r\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\r\n        <CardText className=\"mt-3\">{props.text}</CardText>\r\n        <Button color={props.color}>Read More</Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst SalesChart = () => {\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      stacked: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 4,\r\n      colors: [\"transparent\"],\r\n    },\r\n    legend: {\r\n      show: true,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"30%\",\r\n        borderRadius: 2,\r\n      },\r\n    },\r\n    colors: [\"#0d6efd\", \"#009efb\", \"#6771dc\"],\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n      ],\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        options: {\r\n          plotOptions: {\r\n            bar: {\r\n              columnWidth: \"60%\",\r\n              borderRadius: 7,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const series = [\r\n    \r\n    {\r\n      name: \"2024\",\r\n      data: [10, 20, 40, 60, 20, 40, 60, 60, 20],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Regsitros por Mes</CardTitle>\r\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\r\n          Total Joyas Registradas por Mes\r\n        </CardSubtitle>\r\n        <Chart options={options} series={series} type=\"bar\" height=\"379\" />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst FeedData = [\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"primary\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New user registered.\",\r\n    icon: \"bi bi-person\",\r\n    color: \"info\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"danger\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New order received.\",\r\n    icon: \"bi bi-bag-check\",\r\n    color: \"success\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"dark\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"warning\",\r\n    date: \"6 minute ago\",\r\n  },\r\n];\r\n\r\nconst Feeds = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Zonas</CardTitle>\r\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n          Cantidad de Ni√±os por Zonas\r\n        </CardSubtitle>\r\n        <ListGroup flush className=\"mt-4\">\r\n          {FeedData.map((feed, index) => (\r\n            <ListGroupItem\r\n              key={index}\r\n              action\r\n              href=\"/\"\r\n              tag=\"a\"\r\n              className=\"d-flex align-items-center p-3 border-0\"\r\n            >\r\n              <Button\r\n                className=\"rounded-circle me-3\"\r\n                size=\"sm\"\r\n                color={feed.color}\r\n              >\r\n                <i className={feed.icon}></i>\r\n              </Button>\r\n              {feed.title}\r\n              <small className=\"ms-auto text-muted text-small\">\r\n                {feed.date}\r\n              </small>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import { Col, Row } from \"reactstrap\";\r\nimport SalesChart from \"../components/dashboard/SalesChart\";\r\nimport Feeds from \"../components/dashboard/Feeds\";\r\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\r\n\r\nimport Blog from \"../components/dashboard/Blog\";\r\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\r\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\r\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\r\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\r\n\r\nconst BlogData = [\r\n  {\r\n    image: bg1,\r\n    title: \"This is simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg2,\r\n    title: \"Lets be simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg3,\r\n    title: \"Don't Lamp blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg4,\r\n    title: \"Simple is beautiful\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n];\r\n\r\nconst Starter = () => {\r\n  return (\r\n    <div>\r\n      {/***Top Cards***/}\r\n\r\n      {/***Sales & Feed***/}\r\n      <Row>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\r\n          <SalesChart />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\r\n          <Feeds />\r\n        </Col>\r\n      </Row>\r\n      {/***Table ***/}\r\n     \r\n      {/***Blog Cards**\r\n      <Row>\r\n        {BlogData.map((blg, index) => (\r\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\r\n            <Blog\r\n              image={blg.image}\r\n              title={blg.title}\r\n              subtitle={blg.subtitle}\r\n              text={blg.description}\r\n              color={blg.btnbg}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Starter;\r\n"],"names":["props","_jsxs","Card","children","_jsx","CardImg","alt","src","image","CardBody","className","CardTitle","tag","title","CardSubtitle","subtitle","CardText","text","Button","color","SalesChart","Chart","options","chart","toolbar","show","stacked","dataLabels","enabled","stroke","width","colors","legend","plotOptions","bar","horizontal","columnWidth","borderRadius","xaxis","categories","responsive","breakpoint","series","name","data","type","height","FeedData","icon","date","Feeds","ListGroup","flush","map","feed","index","ListGroupItem","action","href","size","Starter","Row","Col","sm","lg","xl","xxl"],"sourceRoot":""}